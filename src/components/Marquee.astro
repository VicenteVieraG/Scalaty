---
import { Image } from "astro:assets";
import { twMerge } from "tailwind-merge";
import type { HTMLAttributes } from "astro/types";

export interface Brand {
	name: string;
	logo: string;
};

interface Props extends HTMLAttributes<"div"> {
	brands: ReadonlyArray<Brand>;
	speed?: Readonly<number>;
	readonly className?: string | string[];
};
const { brands, speed = 15, className, ...props } = Astro.props;

const isoBrand: ReadonlyArray<Brand> = brands.length? [...brands, ...brands] : [];
---

<div
	role="marquee"
	aria-label="Marcas asociadas"
	class:list={twMerge(["mask-x-from-90% mask-x-to-95% overflow-hidden", className])}
	{...props}>
	<ul class:list={[
			"w-max min-w-[200%] flex items-center",
			`will-change-transform animate-[marquee_${speed}s_linear_infinite]`,
		]}>
		{isoBrand.map(({ name, logo }) =>
			<li
				set:text={ name }
				aria-label={ name }
				class="flex-1 mx-12 text-center text-nowrap font-bold sm:text-xl">
				<Image
					src={ logo }
					alt={ name + " logo" }
					width={ 40 }
					height={ 40 }
					format="svg"
					quality="high"
					class="inline"
				/>
			</li>
		)}
	</ul>
</div>

<style>
	ul:is(:hover, :focus-within) {
		animation-play-state: paused
	}

	@keyframes marquee {
		from { transform: translateX(0); }
		to { transform: translateX(-50%); }
	}

	@media (prefers-reduced-motion: reduce) {
		ul {
			animation: none !important;
			transform: none !important;
		}
	}
</style>